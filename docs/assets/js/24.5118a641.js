(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{318:function(t,a,e){"use strict";e.r(a);var n=e(13),s=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"my-first-bot-for-the-jvm-java-virtual-machine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#my-first-bot-for-the-jvm-java-virtual-machine"}},[t._v("#")]),t._v(" My First Bot for the JVM (Java Virtual Machine)")]),t._v(" "),a("p",[t._v("This tutorial is meant for the Java/JVM platform and a continuation of "),a("RouterLink",{attrs:{to:"/tutorial/my-first-bot.html"}},[t._v("My First Bot")]),t._v(" tutorial.")],1),t._v(" "),a("p",[t._v("The programming language used in this tutorial is "),a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/,",title:"The Java Tutorials",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java"),a("OutboundLink")],1),t._v(", which is the most widespread programming language for the JVM.\nBut other JVM programming languages like "),a("a",{attrs:{href:"https://groovy-lang.org/",title:"Groovy programming language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Groovy"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://kotlinlang.org/",title:"Kotlin programming language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Kotlin"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://www.scala-lang.org/",title:"Scala programming language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Scala"),a("OutboundLink")],1),t._v(", and "),a("a",{attrs:{href:"https://clojure.org/",title:"Clojure programming language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Clojure"),a("OutboundLink")],1),t._v(" can be used as well.")]),t._v(" "),a("p",[t._v("This tutorial assumes you are already familiar with basic "),a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/java/,",title:"The Java Tutorials",target:"_blank",rel:"noopener noreferrer"}},[t._v("Java"),a("OutboundLink")],1),t._v(" programming. But this tutorial should suit well for\npractising your skills programming for Java by making a bot for Robocode.")]),t._v(" "),a("h2",{attrs:{id:"programming"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#programming"}},[t._v("#")]),t._v(" Programming")]),t._v(" "),a("h3",{attrs:{id:"java-jvm-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-jvm-api"}},[t._v("#")]),t._v(" Java (JVM) API")]),t._v(" "),a("p",[t._v("The documentation of the Java (JVM) API for Robocode Tank Royale is available on "),a("RouterLink",{attrs:{to:"/api/apis.html"}},[t._v("this page")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"create-a-source-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#create-a-source-file"}},[t._v("#")]),t._v(" Create a source file")]),t._v(" "),a("p",[t._v("Inside your bot directory ("),a("code",[t._v("../bots/MyFirstBot")]),t._v(") you need to create a Java source file named "),a("code",[t._v("MyFirstBot.java")]),t._v(". You can\nedit that file using a text editor of your choice, or an [IDE] like e.g. "),a("a",{attrs:{href:"https://www.jetbrains.com/idea/",title:"IntelliJ IDEA",target:"_blank",rel:"noopener noreferrer"}},[t._v("IntelliJ IDEA"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://www.eclipse.org/downloads/packages/release/2021-12/r/eclipse-ide-java-developers",title:"Eclipse IDE for Java Developers",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eclipse"),a("OutboundLink")],1),t._v(", "),a("a",{attrs:{href:"https://netbeans.apache.org/",title:"Apache NetBeans",target:"_blank",rel:"noopener noreferrer"}},[t._v("NetBeans"),a("OutboundLink")],1),t._v(",\nor "),a("a",{attrs:{href:"https://code.visualstudio.com/",title:"Visual Studio Code homepage",target:"_blank",rel:"noopener noreferrer"}},[t._v("Visual Studio Code"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"initial-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initial-code"}},[t._v("#")]),t._v(" Initial code")]),t._v(" "),a("p",[t._v("The initial skeleton of your bot could look like this:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("robocode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tankroyale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("botapi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The class in this example ("),a("code",[t._v("MyFirstBot")]),t._v(") is inherited from the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/Bot.html",title:"Bot class",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bot"),a("OutboundLink")],1),t._v(" class from the "),a("code",[t._v("dev.robocode.tankroyale.botapi")]),t._v("\npackage provides methods for controlling the bot but also makes it possible to receive events from the game. The API is\ntaking care of the communication with the server behind the scene.")]),t._v(" "),a("h3",{attrs:{id:"startup-main-entry"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#startup-main-entry"}},[t._v("#")]),t._v(" Startup / Main entry")]),t._v(" "),a("p",[t._v("The next thing we need to do is to declare a "),a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/getStarted/application/index.html",title:"main() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("main"),a("OutboundLink")],1),t._v(" method for our bot. The bot will run like an ordinary application,\nand hence the "),a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/getStarted/application/index.html",title:"main() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("main"),a("OutboundLink")],1),t._v(" method is the entry point of the bot.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The main method starts our bot")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Constructor, which loads the bot config file")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BotInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyFirstBot.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("The "),a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/getStarted/application/index.html",title:"main() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("main"),a("OutboundLink")],1),t._v(" method in this example simply calls the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/BaseBot.html#start()",title:"BaseBot.start()",target:"_blank",rel:"noopener noreferrer"}},[t._v("start"),a("OutboundLink")],1),t._v(" method of the bot, which will let the bot startup reading\nconfiguration and start communicating with the server.")]),t._v(" "),a("p",[t._v("The bot will attempt to "),a("em",[t._v("join")]),t._v(" the server and wait for a signal to engage in a new battle, where one or multiple\ninstances of this bot must participate.")]),t._v(" "),a("p",[t._v("The constructor of "),a("code",[t._v("MyFirstBot")]),t._v(" is set up to call the base constructor, which needs a "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"}},[t._v("BotInfo"),a("OutboundLink")],1),t._v(" object containing the\nbot configuration. The "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"}},[t._v("BotInfo"),a("OutboundLink")],1),t._v(" class contains a convenient method named "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/BotInfo.html#fromFile(java.lang.String)",title:"BotInfo.fromFile() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("fromFile"),a("OutboundLink")],1),t._v(" which can initialize the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/BotInfo.html",title:"BotInfo class",target:"_blank",rel:"noopener noreferrer"}},[t._v("BotInfo"),a("OutboundLink")],1),t._v("\nby reading a JSON file. In this case, it will read the "),a("code",[t._v("MyFirstBot.json")]),t._v(" file we created earlier, which must be\navailable within the bot directory (or some other file location accessible for the bot).")]),t._v(" "),a("p",[t._v("Note that it is also possible to provide all the necessary configuration fields programmatically without a file.")]),t._v(" "),a("h3",{attrs:{id:"the-run-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-run-method"}},[t._v("#")]),t._v(" The Run method")]),t._v(" "),a("p",[t._v("When the bot is started by the game, the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#run()",title:"IBot.run() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("run"),a("OutboundLink")],1),t._v(" method will be called. Hence, your bot should override this method to\nprovide the logic for the bot when the game is started. The "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#run()",title:"IBot.run() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("run"),a("OutboundLink")],1),t._v(" method should do all required initializing. After\nthat, it should enter a loop that runs until the game is ended.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Called when a new round is started -> initialize and do some movement")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Repeat while the bot is running")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnGunRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("360")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnGunRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("360")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("With the code above, the bot will run in a loop, starting by moving forward 100 units. Then it will turn the gun 360°,\nmove back 100 units and turn the gun 360° again. So the bot will continuously move forward and back all the time and\nrotate the gun between moving.")]),t._v(" "),a("p",[t._v("When leaving the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#run()",title:"IBot.run() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("run"),a("OutboundLink")],1),t._v(" method, the bot will not be able to send new commands each round besides code that runs in event\nhandlers. Therefore, a loop is used for preventing the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#run()",title:"IBot.run() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("run"),a("OutboundLink")],1),t._v(" method from exiting. However, we should stop the loop as\nsoon as the bot is no longer running, and hence need to exit the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#run()",title:"IBot.run() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("run"),a("OutboundLink")],1),t._v(" method when the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#isRunning()",title:"IBot.isRunning() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("isRunning"),a("OutboundLink")],1),t._v(" method\nreturns "),a("code",[t._v("false")]),t._v(".")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#isRunning()",title:"IBot.isRunning() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("isRunning"),a("OutboundLink")],1),t._v(" method returns a flag maintained by the API. When the bot is told to stop/terminate its execution, the\n"),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBot.html#isRunning()",title:"IBot.isRunning() method",target:"_blank",rel:"noopener noreferrer"}},[t._v("isRunning"),a("OutboundLink")],1),t._v(" method will automatically be set to return "),a("code",[t._v("false")]),t._v(" by the API.")]),t._v(" "),a("h3",{attrs:{id:"event-handlers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#event-handlers"}},[t._v("#")]),t._v(" Event handlers")]),t._v(" "),a("p",[t._v("The "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/Bot.html",title:"Bot API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bot API"),a("OutboundLink")],1),t._v(" provides a lot of event handlers (on"),a("em",[t._v('"SomeEvent"')]),t._v(" methods) that are triggered by different types of\nevents. All event handlers in the Bot API start with the "),a("em",[t._v("on")]),t._v("-prefix like e.g. "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBaseBot.html#onScannedBot(dev.robocode.tankroyale.botapi.events.ScannedBotEvent)",title:"IBaseBot.onScannedBot(ScannedBotEvent) event handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("onScannedBot"),a("OutboundLink")],1),t._v(". All event handlers are\navailable with the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBaseBot.html",title:"IBaseBot interface",target:"_blank",rel:"noopener noreferrer"}},[t._v("IBaseBot"),a("OutboundLink")],1),t._v(" interface, which the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/Bot.html",title:"Bot class",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bot"),a("OutboundLink")],1),t._v(" class implements.")]),t._v(" "),a("p",[t._v("Talking about the common "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBaseBot.html#onScannedBot(dev.robocode.tankroyale.botapi.events.ScannedBotEvent)",title:"IBaseBot.onScannedBot(ScannedBotEvent) event handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("onScannedBot"),a("OutboundLink")],1),t._v(" event handler, we can implement this handler to fire the cannon whenever our bot\nscans an opponent bot:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("robocode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tankroyale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("botapi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We saw another bot -> fire!")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onScannedBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScannedBotEvent")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("We can also implement another event handler "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBaseBot.html#onHitByBullet(dev.robocode.tankroyale.botapi.events.BulletHitBotEvent)",title:"IBaseBot.onHitByBullet(BulletHitBotEvent) event handler",target:"_blank",rel:"noopener noreferrer"}},[t._v("onHitByBullet"),a("OutboundLink")],1),t._v(" to let the bot attempt to avoid new bullet hits by turning\nthe bot perpendicular to the bullet direction:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("robocode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tankroyale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("botapi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We were hit by a bullet -> turn perpendicular to the bullet")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onHitByBullet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BulletHitBotEvent")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calculate the bearing to the direction of the bullet")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" bearing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcBearing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBullet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Turn 90 degrees to the bullet direction based on the bearing")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnLeft")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" bearing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Note that the "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/Bot.html",title:"Bot API",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bot API"),a("OutboundLink")],1),t._v(" provides helper methods like "),a("a",{attrs:{href:"https://robocode-dev.github.io/tank-royale/api/java/dev/robocode/tankroyale/botapi/IBaseBot.html#calcBearing(double)",title:"IBaseBot.calcBearing(double) method",target:"_blank",rel:"noopener noreferrer"}},[t._v("calcBearing"),a("OutboundLink")],1),t._v(" to ease calculating angles and bearings in the game.")]),t._v(" "),a("h3",{attrs:{id:"putting-it-all-together"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#putting-it-all-together"}},[t._v("#")]),t._v(" Putting it all together")]),t._v(" "),a("p",[t._v("Okay, let us put all the parts together in a single source file:")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("robocode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tankroyale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("botapi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token import"}},[a("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("dev"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("robocode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tankroyale"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("botapi"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("events"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("extends")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Bot")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The main method starts our bot")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Constructor, which loads the bot config file")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyFirstBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BotInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fromFile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MyFirstBot.json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Called when a new round is started -> initialize and do some movement")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Repeat while the bot is running")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isRunning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forward")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnGunRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("360")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnGunRight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("360")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We saw another bot -> fire!")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onScannedBot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ScannedBotEvent")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fire")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// We were hit by a bullet -> turn perpendicular to the bullet")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("onHitByBullet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BulletHitBotEvent")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Calculate the bearing to the direction of the bullet")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("double")]),t._v(" bearing "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("calcBearing")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBullet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDirection")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Turn 90 degrees to the bullet direction based on the bearing")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("turnLeft")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("90")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" bearing"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h2",{attrs:{id:"running-the-bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#running-the-bot"}},[t._v("#")]),t._v(" Running the bot")]),t._v(" "),a("p",[t._v("Now we got a JSON configuration file and the program for our bot. The next step is to provide the files for running the\nbot application. We need to set up scripts for starting the bot, and also supply the bot API library (jar file) that the\nbot on build on and hence depends on.")]),t._v(" "),a("h3",{attrs:{id:"supply-bot-api-library"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#supply-bot-api-library"}},[t._v("#")]),t._v(" Supply bot API library")]),t._v(" "),a("p",[t._v("You need to download the "),a("code",[t._v("robocode-tankroyale-bot-api-x.y.z.jar")]),t._v(" library, e.g. from the Java sample bots or Maven\nrepository and put this into a folder accessible for your bot. I recommend that you put this into a "),a("code",[t._v("../bots/lib")]),t._v("\nfolder (you create) in the root directory containing your MyFirstBot directory ("),a("code",[t._v("../bots/MyFirstBot")]),t._v(").")]),t._v(" "),a("p",[t._v("In the following, we assume that you created this "),a("code",[t._v("lib")]),t._v(" directory beside your bot directory, and copied the bot API jar\nfile into the "),a("code",[t._v("lib")]),t._v(" folder.")]),t._v(" "),a("h3",{attrs:{id:"scripts-for-starting-the-bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scripts-for-starting-the-bot"}},[t._v("#")]),t._v(" Scripts for starting the bot")]),t._v(" "),a("p",[t._v("The remaining part is to supply some script files for starting up the bot. This will ease starting up the bot from the\ncommand line. But those files are also necessary for booting up the bot from Robocode, which will look out for script\nfiles when examining the bot directory and figure out how to run the bot. The script files tell the "),a("RouterLink",{attrs:{to:"/articles/booter.html",title:"Robocode booter"}},[t._v("booter")]),t._v(" of Robocode\nhow to start the bot, which is different for each programming language, platform and OS.")],1),t._v(" "),a("p",[t._v("With Java it is possible to run your bot under Windows, macOS, and Linux. Hence, it is a good idea to provide script\nfiles for all these OSes, which mean that we should provide a "),a("a",{attrs:{href:"https://fileinfo.com/extension/cmd",title:"Windows Command File",target:"_blank",rel:"noopener noreferrer"}},[t._v("command file"),a("OutboundLink")],1),t._v(" for Windows, and\na "),a("a",{attrs:{href:"https://fileinfo.com/extension/sh",title:"Bash Shell Script",target:"_blank",rel:"noopener noreferrer"}},[t._v("shell script"),a("OutboundLink")],1),t._v(" for macOS and Linux.")]),t._v(" "),a("p",[t._v("We create a command file for Windows named "),a("code",[t._v("MyFirstBot.cmd")]),t._v(" and put it into our bot directory:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("java -cp ../lib/* MyFirstBot.java >nul\n")])])]),a("p",[t._v("So the "),a("code",[t._v("java ... MyFirstBot.java")]),t._v(" part is used for starting the bot standing in the bot directory from a command prompt.\nThe "),a("code",[t._v("-cp ../lib/*")]),t._v(" part is used for setting the "),a("a",{attrs:{href:"https://howtodoinjava.com/java/basics/java-classpath/",title:"Java classpath",target:"_blank",rel:"noopener noreferrer"}},[t._v("classpath"),a("OutboundLink")],1),t._v(" containing the bot API. We put this in the library beside\nthe bot directory, and hence the classpath is "),a("code",[t._v("../lib")]),t._v(".")]),t._v(" "),a("p",[t._v("The star (*) tell the classloader in Java to read any file in the "),a("code",[t._v("lib")]),t._v(" folder, and is just a convenient way to avoid\nspecifying the full name of the filename of the bot API "),a("code",[t._v("robocode-tankroyale-bot-api-x.y.z.jar")]),t._v(", which is quite long.")]),t._v(" "),a("p",[a("em",[a("strong",[t._v("IMPORTANT NOTE:")])]),t._v(" The "),a("code",[t._v(">nul")]),t._v(" is a work-around necessary to avoid a Windows-specific quirk where the bot becomes\nunresponsive when started up as a process with the Robocode. "),a("a",{attrs:{href:"?",title:"Note that the unresponsiveness of a Windows process running a bot is not observed when running the\nbot directly from the command line with or without the script; only when using a Java process for running the script\ninside the Robocode booter."}},[t._v("^cmd-quirk")])]),t._v(" "),a("p",[t._v("Next, we provide a shell script for macOS and Linux named "),a("code",[t._v("MyFirstBot.sh")]),t._v(" and put it into our bot directory:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("#!/bin/sh\njava -cp ../lib/* MyFirstBot.java\n")])])]),a("p",[t._v("Note that we need to set the file permission to grant "),a("em",[t._v("read")]),t._v(", "),a("em",[t._v("write")]),t._v(", and especially the "),a("em",[t._v("execute")]),t._v(" right of the script\nfor the owner and owner´s group, e.g. set the permissions to "),a("code",[t._v("775")]),t._v(" ("),a("code",[t._v("-rwxrwxr-x")]),t._v("). We can do this with this command:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("chown 775 MyFirstBot.sh\n")])])]),a("p",[t._v("Note that the "),a("code",[t._v("5")]),t._v(" ("),a("em",[t._v("read")]),t._v(" and "),a("em",[t._v("execute")]),t._v(") is set as everybody else than the owner and owner´s group does should not have\nthe "),a("em",[t._v("write")]),t._v(" permission per default unless it is explicitly granted by you. 😉")]),t._v(" "),a("p",[t._v("Now you have everything in place to run your bot with Robocode Tank Royale.")]),t._v(" "),a("h2",{attrs:{id:"packaging-your-bot"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#packaging-your-bot"}},[t._v("#")]),t._v(" Packaging your bot")]),t._v(" "),a("p",[t._v("If you need to package your bot for distribution, you can do this by zip-packing the bot directory. The zip archive\nshould contain:")]),t._v(" "),a("ul",[a("li",[t._v("Source file (.java, .kt, .groovy, .clj, or .scala)")]),t._v(" "),a("li",[t._v("Script files (.cmd and .sh)")]),t._v(" "),a("li",[t._v("JSON config file (.json)")])]),t._v(" "),a("p",[t._v("And then you might want to provide a "),a("a",{attrs:{href:"https://fileinfo.com/extension/readme",title:"Readme File",target:"_blank",rel:"noopener noreferrer"}},[t._v("README"),a("OutboundLink")],1),t._v(" file to provide some information for other people about your bot. 😃")])])}),[],!1,null,null,null);a.default=s.exports}}]);
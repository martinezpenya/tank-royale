# Sphinx configuration for Robocode Tank Royale Bot API (Python)
# This configuration enables Google-style docstrings via Napoleon.

from __future__ import annotations

import os
import sys
from pathlib import Path

# -- Project information -----------------------------------------------------

def _find_repo_root(start: Path) -> Path:
    p = start.resolve()
    for parent in [p, *p.parents]:
        if (parent / "VERSION").exists():
            return parent
    # Fallback to start if VERSION not found
    return p

_here = Path(__file__).resolve()
_repo_root = _find_repo_root(_here)

# Ensure Python package is importable during autodoc. The Sphinx source is copied under
# build/sphinx/source, so we locate the python project dir (which contains VERSION) and
# add both src/ and src/robocode_tank_royale to sys.path to support imports like
# 'robocode_tank_royale.bot_api' and the apidoc-generated 'bot_api.*' modules.
_python_project_dir = _repo_root
_src_dir = _python_project_dir / "src"
_sys_paths = [
    _src_dir,                          # for 'robocode_tank_royale.*'
    _src_dir / "robocode_tank_royale"  # for 'bot_api.*' generated by apidoc
]
for p in _sys_paths:
    sp = str(p)
    if os.path.isdir(sp) and sp not in sys.path:
        sys.path.insert(0, sp)

project = "Robocode Tank Royale Bot API (Python)"

# Read version from top-level VERSION file if present
version_file = _repo_root / "VERSION"
release = version = version_file.read_text(encoding="utf-8").strip() if version_file.exists() else "0.0.0"

# -- General configuration ---------------------------------------------------

extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",  # Google/NumPy style docstrings
    "sphinx.ext.viewcode",
]

# Have autodoc include members by default so method names are visible even if undocumented
autodoc_default_options = {
    "members": True,
    "undoc-members": True,
    "inherited-members": True,
    "show-inheritance": True,
}
# Keep method order as in source files for easier navigation
autodoc_member_order = "bysource"
# Optional: shorten headings by omitting fully-qualified module name prefixes
add_module_names = False

# Napoleon settings for Google-style docstrings
napoleon_google_docstring = True
napoleon_numpy_docstring = False
napoleon_include_init_with_doc = True
napoleon_include_private_with_doc = False
napoleon_include_special_with_doc = False
napoleon_use_param = True
napoleon_use_ivar = True

templates_path = ["_templates"]
exclude_patterns: list[str] = [
    "_build",
    "Thumbs.db",
    ".DS_Store",
]

# -- Options for HTML output -------------------------------------------------

html_theme = "alabaster"
html_static_path = ["_static"]
